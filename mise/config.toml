[settings]
verbose = false
experimental = true

[env]
DOTFILES_ROOT = "{{env.DOTFILES_ROOT | default(value=env.HOME ~ '/Documents/claude/dotfiles')}}"
MISE_CONFIG_DIR = "{{config_root}}"
XDG_CONFIG_HOME = "{{env.XDG_CONFIG_HOME | default(value=env.HOME ~ '/.config')}}"
BREW_CLI_TOOLS = "stow git git-lfs eza bat fzf zoxide ripgrep fd zsh-autosuggestions zsh-syntax-highlighting atuin starship neovim emacs macchina"
BREW_CASKS = "wezterm nikitabobko/tap/aerospace"

[tasks.bootstrap]
description = "Complete setup: install tools, tangle configs, and stow dotfiles"
depends = ["install", "tangle", "stow", "setup-tmux", "setup-zsh"]
run = "echo '✓ Bootstrap complete! Dotfiles are ready.'"

[tasks.install]
description = "Install all tools (Homebrew CLI tools and casks)"
depends = ["install-brew-tools", "install-brew-casks"]
run = [
    "mkdir -p {{env.XDG_CONFIG_HOME}}",
    "echo '✓ All tools installed'",
]

[tasks.install-brew-tools]
description = "Install CLI tools via Homebrew"
run = '''
brew install {{env.BREW_CLI_TOOLS}} && \
echo '✓ Homebrew CLI tools installed'
'''

[tasks.install-brew-casks]
description = "Install GUI applications via Homebrew casks"
run = '''
brew install --cask {{env.BREW_CASKS}} && \
echo '✓ Homebrew casks installed'
'''

[tasks.update]
description = "Update all tools to latest versions"
run = [
    "brew upgrade",
    "echo '✓ All tools updated'",
]

[tasks.tangle]
description = "Tangle all Org mode configuration files"
dir = "{{env.DOTFILES_ROOT}}"
run = '''
emacs --batch --eval "(progn \
  (require 'org) \
  (dolist (file '(\"{{env.DOTFILES_ROOT}}/tmux/README.org\" \
                  \"{{env.DOTFILES_ROOT}}/wezterm/README.org\" \
                  \"{{env.DOTFILES_ROOT}}/aerospace/README.org\" \
                  \"{{env.DOTFILES_ROOT}}/starship/README.org\" \
                  \"{{env.DOTFILES_ROOT}}/git/README.org\" \
                  \"{{env.DOTFILES_ROOT}}/nvim/README.org\" \
                  \"{{env.DOTFILES_ROOT}}/emacs/config.org\" \
                  \"{{env.DOTFILES_ROOT}}/zsh/README.org\" \
                  \"{{env.DOTFILES_ROOT}}/mise/README.org\")) \
    (when (file-exists-p file) \
      (message \"Tangling %s...\" file) \
      (with-current-buffer (find-file-noselect file) \
        (org-babel-tangle) \
        (kill-buffer)))))"
'''
outputs = ["echo '✓ All configurations tangled'"]

[tasks.stow]
description = "Set up dotfiles using stow (creates symlinks in XDG config directory)"
depends = ["tangle"]
dir = "{{env.DOTFILES_ROOT}}"
run = [
    "stow .",
    "echo '✓ Dotfiles symlinked to {{env.XDG_CONFIG_HOME}}'",
]

[tasks.stow-verify]
description = "Verify stow configuration (dry run)"
dir = "{{env.DOTFILES_ROOT}}"
run = "stow -nv ." # "stow --adopt -t ~/.config -nv ."

[tasks.restow]
description = "Re-stow all configurations"
dir = "{{env.DOTFILES_ROOT}}"
run = [
    "stow -R .", # "stow -Rt ~/.config .",
    "echo '✓ Configurations re-stowed'",
]

[tasks.destow]
description = "Remove all symlinks created by stow"
dir = "{{env.DOTFILES_ROOT}}"
run = [
    "stow -D .", # "stow -Dt ~/.config .",
    "echo '✓ Symlinks removed'",
]

[tasks.doctor]
description = "Check mise and tool installation status"
run = [
    "mise doctor",
    "mise list",
]

[tasks.setup-tmux]
description = "Install TMUX Plugin Manager (TPM)"
run = [
    "git clone https://github.com/tmux-plugins/tpm {{env.XDG_CONFIG_HOME}}/tmux/plugins/tpm || echo 'TPM already installed'",
    "echo '✓ TPM installed. Press prefix + I in tmux to install plugins'",
]

[tasks.reload-tmux]
description = "Reload TMUX configuration"
run = "tmux source-file {{env.XDG_CONFIG_HOME}}/tmux/tmux.conf || echo 'Start tmux first, then reload with prefix + R'"

[tasks.reload-aerospace]
description = "Reload AeroSpace configuration"
run = [
    "aerospace reload-config",
    "echo '✓ AeroSpace configuration reloaded'",
]

[tasks.setup-zsh]
description = "Set ZDOTDIR in ~/.zshenv and create .hushlogin to suppress login messages"
run = '''
echo 'export ZDOTDIR="{{env.XDG_CONFIG_HOME}}/zsh"' > ~/.zshenv && \
touch ~/.hushlogin && \
echo '✓ ZDOTDIR set in ~/.zshenv and .hushlogin created'
'''
